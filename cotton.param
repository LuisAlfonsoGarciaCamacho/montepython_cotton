#------Experiments to test (separated with commas)-----

# valid options are (so far): acbar, bicep, boomerang, cbi,
# hst, quad, sn, spt, fake_planck_bluebook,
# euclid_pk, euclid_lensing
# and clik_fake_planck (for Planck members)

#data.experiments=['JLA']
data.experiments=['cosmic_clocks_2016','Pantheon','timedelay_6lenses']

#------ Parameter list -------
# data.parameters[class name] = [mean, min, max, 1-sigma, scale, role]
# - if min max irrelevant, put to -1 or None (if you want a boundary of -1, use -1.0)
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'


# Cosmological parameters list
data.parameters['Omega_cdm'] = [0.5,  0.0, 1.0, 0.05,  1, 'cosmo']
data.parameters['cotton'] = [2.0, 0.0, 40.0,  0.05,  1, 'cosmo']
data.parameters['n_cotton'] = [0.9, 0.0, 3.0,  0.05,  1, 'cosmo']

data.parameters['H0'] = [70.0, 60.0, 80.0,  0.05,  1, 'cosmo']

# H0 60-80,70,0.05
# Omega_Lambda 0.70, 0.6-0.8,0.05

# Nuisance
#data.parameters['alpha']   = [0.15 ,  None, None, 0.05, 1, 'nuisance']
#data.parameters['beta']    = [3.559,  None, None, 0.05,  1, 'nuisance']
data.parameters['M']       = [-10.0, None, None, 0.05,  1, 'nuisance']
#data.parameters['Delta_M'] = [-0.10,  None, None, 0.05,  1, 'nuisance']

# Extras
# CLASS: funcion eos_cotton p/densidad_cotton

# Derived parameter list
#data.parameters['Omega_m'] = [0, -1, -1, 0, 1,  'derived']
data.parameters['Omega_Lambda'] = [0.70, -1, -1,  0,  1, 'derived']

data.cosmo_arguments['Omega_b'] = 0.05
#------ Mcmc parameters ----
# Number of steps taken, by default (overwritten by the -N command)
data.N=10
# Number of accepted steps before writing to file the chain. Larger means less
# access to disc, but this is not so much time consuming.
data.write_step=5
